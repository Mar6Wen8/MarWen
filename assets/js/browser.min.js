// Popis kódu pro zjišťování informací o prohlížeči a operačním systému

// Definice objektu browser, který obsahuje informace o prohlížeči a operačním systému
var browser = (function () {
    "use strict";

    // Interní objekt browserInfo, který uchovává informace
    var browserInfo = {
        name: null,         // Název prohlížeče
        version: null,      // Verze prohlížeče
        os: null,           // Název operačního systému
        osVersion: null,    // Verze operačního systému
        touch: null,        // Přítomnost dotykové obrazovky
        mobile: null,       // Přítomnost mobilního zařízení
        _canUse: null,      // Interní pomocný prvek pro testování dostupnosti funkcí

        // Metoda pro testování dostupnosti určité funkce nebo vlastnosti
        canUse: function (feature) {
            browserInfo._canUse || (browserInfo._canUse = document.createElement("div"));
            var style = browserInfo._canUse.style;
            var featureCapitalized = feature.charAt(0).toUpperCase() + feature.slice(1);

            // Testování vlastnosti ve stylu elementu nebo jeho vendor-prefixed variantách
            return (
                feature in style ||
                "Moz" + featureCapitalized in style ||
                "Webkit" + featureCapitalized in style ||
                "O" + featureCapitalized in style ||
                "ms" + featureCapitalized in style
            );
        },

        // Inicializace objektu browserInfo
        init: function () {
            var userAgent = navigator.userAgent;
            var name = "other";
            var version = 0;

            // Rozpoznání prohlížeče na základě uživatelského agenta
            for (var i = 0; i < browserPatterns.length; i++) {
                if (userAgent.match(browserPatterns[i][1])) {
                    name = browserPatterns[i][0];
                    version = parseFloat(RegExp.$1);
                    break;
                }
            }

            browserInfo.name = name;
            browserInfo.version = version;

            name = "other";
            for (var j = 0; j < osPatterns.length; j++) {
                if (userAgent.match(osPatterns[j][1])) {
                    name = osPatterns[j][0];
                    version = parseFloat(osPatterns[j][2] ? osPatterns[j][2](RegExp.$1) : RegExp.$1);
                    break;
                }
            }

            // Speciální zpracování pro macOS s dotykovými zařízeními
            if (name === "mac" && "ontouchstart" in window && (
                screen.width === 1024 && screen.height === 1366 ||
                screen.width === 834 && screen.height === 1112 ||
                screen.width === 810 && screen.height === 1080 ||
                screen.width === 768 && screen.height === 1024
            )) {
                name = "ios";
            }

            browserInfo.os = name;
            browserInfo.osVersion = version;
            browserInfo.touch = browserInfo.os === "wp" ? 0 : !!("ontouchstart" in window);
            browserInfo.mobile = ["wp", "android", "ios", "bb"].indexOf(browserInfo.os) !== -1;
        },
    };

    // Definice vzorů prohlížečů pro porovnání s uživatelským agentem
    var browserPatterns = [
        ["firefox", /Firefox\/([0-9\.]+)/],
        ["bb", /BlackBerry.+Version\/([0-9\.]+)/],
        ["bb", /BB[0-9]+.+Version\/([0-9\.]+)/],
        ["opera", /OPR\/([0-9\.]+)/],
        ["opera", /Opera\/([0-9\.]+)/],
        ["edge", /Edge\/([0-9\.]+)/],
        ["safari", /Version\/([0-9\.]+).+Safari/],
        ["chrome", /Chrome\/([0-9\.]+)/],
        ["ie", /MSIE ([0-9]+)/],
        ["ie", /Trident\/.+rv:([0-9]+)/],
    ];

    // Definice vzorů operačních systémů pro porovnání s uživatelským agentem
    var osPatterns = [
        ["ios", /([0-9_]+) like Mac OS X/, function (match) {
            return match.replace("_", ".").replace("_", ".");
        }],
        ["ios", /CPU like Mac OS X/, function () {
            return 0;
        }],
        ["wp", /Windows Phone ([0-9\.]+)/, null],
        ["android", /Android ([0-9\.]+)/, null],
        ["mac", /Macintosh.+Mac OS X ([0-9_]+)/, function (match) {
            return match.replace("_", ".").replace("_", ".");
        }],
        ["windows", /Windows NT ([0-9\.]+)/, null],
        ["bb", /BlackBerry.+Version\/([0-9\.]+)/, null],
        ["bb", /BB[0-9]+.+Version\/([0-9\.]+)/, null],
        ["linux", /Linux/, null],
        ["bsd", /BSD/, null],
        ["unix", /X11/, null],
    ];

    // Inicializace objektu browserInfo
    browserInfo.init();

    // Vrácení objektu browserInfo z anonymního uzávěrky jako výsledek modulu
    return browserInfo;
})();

// Exportování modulu pro použití v různých prostředích (AMD, CommonJS, globální prostředí)
(function (global, factory) {
    if (typeof define === "function" && define.amd) {
        define([], factory);
    } else if (typeof exports === "object") {
        module.exports = factory();
    } else {
        global.browser = factory();
    }
})(this, function () {
    return browser;
});
